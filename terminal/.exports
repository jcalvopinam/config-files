#!/usr/bin/env bash
# Exports

export PATH=/usr/local/bin/:/usr/local/sbin/:$PATH

#----------------------------------------------------------------------------------
# For Maven, Gradle and Java > sdkman
# For NodeJs > NodeVersionManager nvm / FastNodeManager fnm
#----------------------------------------------------------------------------------

#----------------------------------------------------------------------------------
# Java setup
#JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home
#export PATH=$PATH:$JAVA_HOME
#----------------------------------------------------------------------------------
# Node setup
#NODEJS_HOME=$HOME/Tools/node
#export PATH=$PATH:$NODEJS_HOME/bin

#----------------------------------------------------------------------------------
# Derby setup
#----------------------------------------------------------------------------------
#DERBY_HOME=$HOME/Tools/db-derby-10.12.1.1-bin
#export PATH=$PATH:$DERBY_HOME/bin
#export CLASSPATH=$DERBY_HOME/lib/derby.jar:$DERBY_HOME/lib/derbytools.jar:

#----------------------------------------------------------------------------------
# Python setup
#----------------------------------------------------------------------------------
# The original version is saved in .bash_profile.pysave
PYTHON_HOME=/Library/Frameworks/Python.framework/Versions/3.6/bin
export PATH=$PATH:$PYTHON_HOME/bin

#----------------------------------------------------------------------------------
#GCP Credentials
#----------------------------------------------------------------------------------
export GOOGLE_APPLICATION_CREDENTIALS="/Users/jcalvopina/space/IdeaProjects/alison-project/siseg-ecuador-a8e0b760cb7f.json"

#----------------------------------------------------------------------------------
# NVM setup
#----------------------------------------------------------------------------------
#export NVM_DIR="$HOME/.nvm"
# [ -s "$(brew --prefix)/opt/nvm/nvm.sh" ] && . "$(brew --prefix)/opt/nvm/nvm.sh"   # load nvm command
# [ -s "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm" ] && . "$(brew --prefix)/opt/nvm/etc/bash_completion.d/nvm" # load nvm completion
#export NVM_LAZY_LOAD=true                                                         # NVM load
#export NVM_COMPLETION=true                                                        # NVM completition

#----------------------------------------------------------------------------------
# FNM setup
#----------------------------------------------------------------------------------
#export FNM_DIR="$HOME/.fnm"
#  [ -s "$(brew --prefix)/opt/fnm/fnm.sh" ] && . "$(brew --prefix)/opt/fnm/fnm.sh"   # loads fnm command
#  [ -s "$(brew --prefix)/opt/fnm/etc/bash_completion.d/nvm" ] && . "$(brew --prefix)/opt/fnm/etc/bash_completion.d/nvm" # load fnm completion

eval "$(fnm env --use-on-cd)"q

#----------------------------------------------------------------------------------
# Android Studio setup
#----------------------------------------------------------------------------------
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

#----------------------------------------------------------------------------------
# GENERAL
#----------------------------------------------------------------------------------
export GPG_TTY=\$(tty)                                                             # git Signing commits
#export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST                                   # saving dump files into ZSH cache folder
#export LANG=en_US.UTF-8                                                           # set your language environment

#----------------------------------------------------------------------------------
# THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
#----------------------------------------------------------------------------------
export SDKMAN_DIR=$HOME"/.sdkman"
[[ -s $HOME"/.sdkman/bin/sdkman-init.sh" ]] && source $HOME"/.sdkman/bin/sdkman-init.sh"

#----------------------------------------------------------------------------------
# FZF setup for default command
# this exclude all files and folders defined in the .gitignore file
# It's is required to be defined using:
# git config --global core.excludesFile ~/.gitignore_global
#----------------------------------------------------------------------------------
export FZF_DEFAULT_COMMAND=" rg --files --hidden "
