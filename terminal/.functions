#!/usr/bin/env bash
# Functions

#----------------------------------------------------------------------------------
# Creates a new folder and enter it
#----------------------------------------------------------------------------------
function mkd() {
    mkdir -p "$@" && cd "$_";
}


#----------------------------------------------------------------------------------
# Deletes file/folder with scrub utility
#----------------------------------------------------------------------------------
function rmk() {
    scrub -p dod $1
    shred -zun 10 -v $1
}


#----------------------------------------------------------------------------------
# Gets the size of a file or total size of a directory
#----------------------------------------------------------------------------------
function file-size() {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh;
    else
        local arg=-sh;
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@";
    else
        du $arg .[^.]* ./*;
    fi;
}


#----------------------------------------------------------------------------------
# Gets the most useful info
#----------------------------------------------------------------------------------
function digga() {
    dig +nocmd "$1" any +multiline +noall +answer;
}


#----------------------------------------------------------------------------------
# UTF-8-encode a string of Unicode symbols
#----------------------------------------------------------------------------------
function utf8() {
    printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u);
    # print a newline unless weâ€™re piping the output to another program
    if [ -t 1 ]; then
        echo ""; # newline
    fi;
}


#----------------------------------------------------------------------------------
# Extract and open project with IntelliJ, currently this only supports "zip" files.
#                    The command uio means Unzip Intellij Open
# Keep in mind that the "idea" command must be enabled, if you aren't sure, please
# open IntelliJ and go to "Tools > Create Command-line Launcher..." and hit "OK"
# sample how to use: uio project-name.zip
# > uio demo.zip
#----------------------------------------------------------------------------------
function uio() {
    project=$1
    filename=$(basename -- "$project")
    extension="${filename##*.}"
    filename="${filename%.*}"

    if [ "$project" = "" ]; then
        echo " ::Please enter the file name..."
    else
        if [[ ${extension} == "zip" ]]; then
            unzip -q $project
            echo " ::Checking the project structure ..."
            cd $filename
            if [ -e pom.xml ] || [ -e build.gradle ]; then
                echo " ::Opening the project" $filename
                cd ..
                idea $filename & 
                sleep 5
                echo " "
            else
                cd ..
                rm -rf $filename
                echo " ::The structure of the project is not maven nor gradle"
            fi
        else
            echo " :: Extension file doesn't support...."
        fi
    fi
}


#----------------------------------------------------------------------------------
# Set 'man' colors
#----------------------------------------------------------------------------------
function man() {
    env \
    LESS_TERMCAP_mb=$'\e[01;31m' \
    LESS_TERMCAP_md=$'\e[01;31m' \
    LESS_TERMCAP_me=$'\e[0m' \
    LESS_TERMCAP_se=$'\e[0m' \
    LESS_TERMCAP_so=$'\e[01;44;33m' \
    LESS_TERMCAP_ue=$'\e[0m' \
    LESS_TERMCAP_us=$'\e[01;32m' \
    man "$@"
}


#----------------------------------------------------------------------------------
# Clean duplicated entries
#----------------------------------------------------------------------------------
function czsh() {
    cd ~
    cat -n .zsh_history | sort -t ';' -uk2 | sort -nk1 | cut -f2- > .zsh_clean_history
    rm -rf .zsh_history .zcompdump* .zsh_sessions
    mv .zsh_clean_history .zsh_history
    cd -
}
